/*
 * Name:	SoldierDictionary
 * Date:	2020-07-04
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles soldier unit types for both sides.
 *
 * DO NOT EDIT THIS FILE!
 *
 * If you do there will be conflicts when you update the TvTCF CPack in the future. Instead you can add units to this 
 * object by from the top of the mission's Setup method call call the soldier dictionary's AddEntry method, like:
 *
 * protected override method Setup()
 * {
 *     [alias, westVehicletype, eastVehicleType] call _self.SoldierDictionary.AddEntry;
 *     ...
 * };
 */

using Tvtcf.Server;

namespace Campaigns
{
	public class SoldierDictionary
	{
		private fields ["_mSoldierTypes" as Array /* of VehicleSideAlias */];
		
		// Creates a VehicleTypeHandler object.
		public constructor()
		{
			_mSoldierTypes = [
				["AMMO BEARER", "B_Soldier_A_F", "O_Soldier_A_F"] new VehicleSideAlias,
				["ASST. AUTORIFLEMAN", "B_soldier_AAR_F", "O_Soldier_AAR_F"] new VehicleSideAlias,
				["ASST. GUNNER HMG/GMG", "B_support_AMG_F", "O_support_AMG_F"] new VehicleSideAlias,
				["ASST. GUNNER MK6", "B_support_AMort_F", "O_support_AMort_F"] new VehicleSideAlias,
				["ASST, MISSILE SPECIALIST AA", "B_soldier_AAA_F", "O_Soldier_AAA_F"] new VehicleSideAlias,
				["ASST, MISSILE SPECIALIST AT", "B_soldier_AAT_F", "O_Soldier_AAT_F"] new VehicleSideAlias,
				["AUTORIFLEMAN", "B_soldier_AR_F", "O_Soldier_AR_F"] new VehicleSideAlias,
				["COMBAT LIFE SAVER", "B_medic_F", "O_medic_F"] new VehicleSideAlias,
				["CREWMAN", "B_crew_F", "O_crew_F"] new VehicleSideAlias,
				["ENGINEER", "B_engineer_F", "O_engineer_F"] new VehicleSideAlias,
				["EXPLOSIVE SPECIALIST", "B_soldier_exp_F", "O_soldier_exp_F"] new VehicleSideAlias,
				["GRENADIER", "B_Soldier_GL_F", "O_Soldier_GL_F"] new VehicleSideAlias,
				["GUNNER GMG", "B_support_GMG_F", "O_support_GMG_F"] new VehicleSideAlias,
				["GUNNER HMG", "B_support_MG_F", "O_support_MG_F"] new VehicleSideAlias,
				["GUNNER MK6", "B_support_Mort_F", "O_support_Mort_F"] new VehicleSideAlias,
				["HELICOPTER CREW", "B_helicrew_F", "O_helicrew_F"] new VehicleSideAlias,
				["HELICOPTER PILOT", "B_Helipilot_F", "O_helipilot_F"] new VehicleSideAlias,
				["MARKSMAN", "B_soldier_M_F", "O_soldier_M_F"] new VehicleSideAlias,
				["MISSILE SPECIALIST AA", "B_soldier_AA_F", "O_Soldier_AA_F"] new VehicleSideAlias,
				["MISSILE SPECIALIST AT", "B_soldier_AT_F", "O_Soldier_AT_F"] new VehicleSideAlias,
				["OFFICER", "B_officer_F", "O_officer_F"] new VehicleSideAlias,
				["PARA TROOPER", "B_soldier_PG_F", "O_soldier_PG_F"] new VehicleSideAlias,
				["PILOT", "B_Pilot_F", "O_Pilot_F"] new VehicleSideAlias,
				["REPAIR SPECIALIST", "B_soldier_repair_F", "O_soldier_repair_F"] new VehicleSideAlias,
				["RIFLEMAN", "B_Soldier_F", "O_Soldier_F"] new VehicleSideAlias,
				["RIFLEMAN AT", "B_soldier_LAT_F", "O_Soldier_LAT_F"] new VehicleSideAlias,
				["RIFLEMAN LIGHT", "B_Soldier_lite_F", "O_Soldier_lite_F"] new VehicleSideAlias,
				["RIFLEMAN UNARMED", "B_Soldier_unarmed_F", "O_Soldier_unarmed_F"] new VehicleSideAlias,
				["SQUAD LEADER", "B_Soldier_SL_F", "O_Soldier_SL_F"] new VehicleSideAlias,
				["SURVIVOR", "B_Survivor_F", "O_Survivor_F"] new VehicleSideAlias,
				["TEAM LEADER", "B_Soldier_TL_F", "O_Soldier_TL_F"] new VehicleSideAlias,
				["UAV OPERATOR", "B_soldier_UAV_F", "O_soldier_UAV_F"] new VehicleSideAlias
			];
		};
		
		// Adds an entry to the soldier dictionary. If an entry with the provided alias already exists it
		// will be overwritten.
		// _alias (String): An alias for the soldier of object type.
		// _westVehicleType (String): Classname if west.
		// _eastVehicleType (String): Classname if east.
		public method AddEntry("_alias" as String, "_westVehicleType" as String, "_eastVehicleType" as String)
		{
			// Check if the alias already exists, and in case it does, overrite it.
			
			for "_i" from 0 to count _mSoldierTypes do
			{
				var _item = _mSoldierTypes select _i as VehicleSideAlias;
				
				if (_item.Name == _alias) then {
					_mSoldierTypes set [_i, [_alias, _westVehicleType, _eastVehicleType] new VehicleSideAlias];
					return;
				};
			};
		
			_mSoldierTypes pushBack [_alias, _westVehicleType, _eastVehicleType] new VehicleSideAlias;
		};
		
		// Gets a soldier type classname by a side.
		// _alias (String): The alias.
		// _side (Side): The side.
		// Returns (String): The class name matching the alias and side. Empty string ("") if the alias was not found.
		public method String GetSoldierType("_alias" as String, "_side" as Side)
		{
			{
				if (_x.Name == _alias) then {
					return [_side] call _x.GetVehicleType;
				};
			} foreach _mSoldierTypes as VehicleSideAlias;
			
			return "";
		};
	};
};
